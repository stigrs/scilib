name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  WIN_BLAS_DIR: "D:/a/openblas"
  WIN_BLAS_ROOT: "D:/a/openblas/OpenBLAS.0.2.14.1/lib/native"

jobs:
  build-linux:
    strategy:
      matrix:
        compiler: [g++-9, g++-10, clang++-10, clang++-11, clang++-12]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Prepare
      # Install necessary software
      run: sudo apt-get install gfortran libopenblas-dev liblapacke-dev
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=g++-10

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Prepare
      # Install necessary software
      run: brew install openblas libomp
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Prepare
      # Install necessary software
      shell: pwsh
      run: |
        mkdir ${{env.WIN_BLAS_DIR}}
        nuget install OpenBLAS -o ${{env.WIN_BLAS_DIR}}
        $env:PATH="${{env.WIN_BLAS_ROOT}}\win32\bin;${{env.WIN_BLAS_ROOT}}\native\x64\bin;$env:PATH"
        $env:BLAS_DIR="${{env.WIN_BLAS_DIR}}"
        $env:BLAS_ROOT="${{env.WIN_BLAS_ROOT}}"
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DScilib_BUILD_BENCH=OFF

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      